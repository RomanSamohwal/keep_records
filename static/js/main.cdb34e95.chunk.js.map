{"version":3,"sources":["components/topbar/Topbar.tsx","features/sidebar/SidebarHeader.tsx","components/input/Input.tsx","features/sidebar/SidebarInput.tsx","components/button/Button.tsx","api/api.ts","utils/formUser.ts","bll/app-reducer.ts","bll/users-reducer.ts","features/sidebar/Sidebar.tsx","components/paginator/PaginatorComponent.tsx","features/table/FormTable.tsx","features/table/TableComponent.tsx","features/table/Selected.tsx","features/table/TableContainer.tsx","features/table/ResultSearchComponent.tsx","common/loading/Loading.tsx","app/main/Main.tsx","common/message/Messages.tsx","app/App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx"],"names":["TopBar","className","SideBarHeader","InputComponent","props","style","margin","padding","width","height","fontSize","id","valus","value","name","onChange","placeholder","SidebarInputData","title","ButtonComponent","label","type","instance","axios","create","baseURL","ApiUsers","getUsers","a","identif","surname","patronymic","doc_series","doc_num","get","formUser","user","sname","addressLast","formAddressLast","ateAddress","bdate","formDate","dsdDateRec","date","moment","format","data","compareValue","areaL","areaObjNum","regionL","villageCouncil","vilCouncilObjNum","typeCityL","cityL","typeStreetL","streetL","house","korps","app","slice","createSlice","initialState","status","error","message","reducers","setAppError","state","action","payload","setAppStatus","setAppMessage","appReducer","reducer","actions","getSelectedUser","createAsyncThunk","param","thunkAPI","dispatch","response","users","map","u","String","rejectWithValue","userReducer","extraReducers","builder","addCase","fulfilled","SidebarComponent","useDispatch","formik","useFormik","initialValues","onSubmit","values","handleSubmit","handleChange","PaginatorDemo","React","memo","first","currentPage","rows","totalRecords","totalPages","onPageChange","event","onChangeCurrentPage","template","FormTable","role","backgroundColor","border","textAlign","TableComponent","ArrayDate","length","Math","floor","random","headerTable","t","Selected","onSelectHandler","TableContainer","useSelector","useEffect","setTotalCount","useState","pageSize","setPageSize","totalCount","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentData","ceil","useCallback","e","Number","currentTarget","ResultSearchComponent","Progress","minHeight","display","justifyContent","alignItems","strokeWidth","fill","animationDuration","Main","Messages","toast","useRef","current","show","severity","summary","detail","life","ref","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdb34e95.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Topbar.css'\r\n\r\nexport const TopBar = () => <div className={'layout-topbar'}></div>\r\n","import React from 'react';\r\nimport './Sidebar.css'\r\n\r\nexport const SideBarHeader = () => {\r\n    return <div className={'sidebar-header'}>\r\n        <div className={'container-title'}>\r\n            <div>Регистрационный</div>\r\n            <div>учет</div>\r\n        </div>\r\n        <div className={'circle'}>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport {InputText} from 'primereact/inputtext';\r\n\r\nexport const InputComponent = (props: any) => {\r\n    return (\r\n        <div>\r\n            <InputText style={{margin: 0, padding: 0, width: `${props.width}`, height: '18px', fontSize: '0.8rem'}}\r\n                       id = {props.id} valus = {props.value} name = {props.name}\r\n                       onChange={props.onChange} placeholder={props.placeholder}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Sidebar.css'\r\nimport {InputComponent} from '../../components/input/Input';\r\n\r\ntype InputDataProps = {\r\n    id: string\r\n    placeholder: string\r\n    width: string\r\n    title: string\r\n    name: string\r\n    onChange: any\r\n    value: any\r\n}\r\n\r\nexport const SidebarInputData = (props: InputDataProps) => {\r\n    return <div className='input-item'>\r\n        <span>{props.title}</span>\r\n        <InputComponent id={props.id} name={props.name} onChange={props.onChange}\r\n                        value={props.value} placeholder={props.placeholder} width={props.width}/>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport {Button} from 'primereact/button';\r\n\r\nexport const ButtonComponent = (props : any) => {\r\n    return <Button style={{height: '25px', fontSize: '10px', width: '155px'}}\r\n                label='Поиск в локальной БД' className='p-button-raised' type={props.type}/>\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://a.todes.by:13555/data-service-test/api/v1/'\r\n})\r\n\r\nexport const ApiUsers = {\r\n    getUsers: async (identif: number | string = '', surname: string = '', name : string = '',\r\n                     patronymic: string = '', doc_series: number | string = '', doc_num : number | string = '') => {\r\n        return await instance.get(`data?sys_organ=26&identif=${identif}&surname=${surname}&name=${name}\r\n                     &patronymic=${patronymic}&doc_series=${doc_series}&doc_num=${doc_num}`)\r\n    }\r\n}\r\n\r\nexport type getUserParam = {\r\n    identif?: number,\r\n    name?: string,\r\n    surname?: string,\r\n    patronymic?: string,\r\n    doc_series?: string,\r\n    doc_num?: number\r\n}\r\nexport type User = {\r\n    pid: number\r\n    identif: string\r\n    view: {\r\n        klUniPK: {\r\n            type: number\r\n            code: number\r\n        }\r\n        lex1: string\r\n        lex2: any\r\n        lex3: any\r\n        dateBegin: any\r\n        active: boolean\r\n    }\r\n    sysDocType: {\r\n        klUniPK: {\r\n            \"type\": number\r\n            \"code\": number\r\n        },\r\n        \"lex1\": string\r\n        \"lex2\": any\r\n        \"lex3\": any\r\n        \"dateBegin\": any\r\n        \"active\": boolean\r\n    },\r\n    surname: string\r\n    name: string\r\n    sname: string\r\n    sex: {\r\n        klUniPK: {\r\n            type: number\r\n            code: number\r\n        },\r\n        lex1: string\r\n        lex2: any\r\n        lex3: any\r\n        dateBegin: any\r\n        active: boolean\r\n    },\r\n    citizenship: {\r\n        klUniPK: {\r\n            type: number\r\n            code: number\r\n        },\r\n        lex1: string\r\n        lex2: any\r\n        lex3: any\r\n        dateBegin: any\r\n        active: boolean\r\n    }\r\n    sysOrgan: {\r\n        klUniPK: {\r\n            type: number\r\n            code: number\r\n        },\r\n        lex1: string\r\n        lex2: any\r\n        lex3: any\r\n        dateBegin: any\r\n        active: boolean\r\n    }\r\n    bdate: string\r\n    dsdDateRec: any\r\n    docSery: any\r\n    docNum: any\r\n    regNum: any\r\n    docDateIssue: any\r\n    docAppleDate: any\r\n    dateRec: any\r\n    ateAddress: string\r\n    expireDate: any\r\n    aisPasspDocStatus: any\r\n    identifCheckResult: number\r\n    countryB: any\r\n    areaB: any\r\n    regionB: any\r\n    typeCityB: any\r\n    cityB: any\r\n    docType: any\r\n    docOrgan: any\r\n    inputOldAddress: true\r\n    contryL: any\r\n    areaL: any\r\n    regionL: any\r\n    typeCityL: any\r\n    cityL: any\r\n    typeStreetL: any\r\n    streetL: any\r\n    house: any\r\n    korps: any\r\n    app: any\r\n    organDoc: any\r\n    workPlace: any\r\n    workPosition: any\r\n    docIssueOrgan: any\r\n    surnameBel: any\r\n    nameBel: any\r\n    snameBel: any\r\n    surnameEn: any\r\n    nameEn: any\r\n    areaBBel: any\r\n    regionBBel: any\r\n    cityBBel: any\r\n    villageCouncil: any\r\n    intracityRegion: any\r\n    form19_20: {\r\n        form19_20Base: string\r\n        pid: any\r\n        signAway: boolean\r\n        countryPu: any\r\n        areaPu: any\r\n        regionPu: any\r\n        cityPu: any\r\n        datePu: any\r\n        dateRegWhereComeFrom: any\r\n        marks: any\r\n        notes: any\r\n        reason: any\r\n        term: any\r\n        dateRec: any\r\n        typeCityPu: any\r\n        typeStreetPu: any\r\n        streetPu: any\r\n        housePu: any\r\n        korpsPu: any\r\n        appPu: any\r\n        dateReg: any\r\n        termReg: any\r\n        dateRegTill: any\r\n        causeIssue: any\r\n        deathDate: any\r\n        signNoTake: boolean\r\n        signNoReg: boolean\r\n        signDestroy: boolean\r\n        noAddrPu: any\r\n        regType: any\r\n        maritalStatus: any\r\n        education: any\r\n        student: boolean\r\n        infants: any\r\n    }\r\n    dsdAddressLive: any\r\n    getPassportDate: any\r\n    images: any\r\n    addressLast: {\r\n        dsdAddressLiveBase: string\r\n        pid: any\r\n        areaL: string\r\n        areaObjNum: any\r\n        regionL: string\r\n        regionObjNum: any\r\n        villageCouncil: any\r\n        vilCouncilObjNum: any\r\n        typeCityL: string\r\n        cityL: string\r\n        typeStreetL: string\r\n        streetL: string\r\n        house: string\r\n        korps: string\r\n        app: string\r\n        ateObjectNum: any\r\n        ateElementUid: any\r\n        ateAddrNum: any\r\n    },\r\n    status: any\r\n}\r\nexport type addressLast = {\r\n    dsdAddressLiveBase: string\r\n    pid: any\r\n    areaL: string\r\n    areaObjNum: any\r\n    regionL: string\r\n    regionObjNum: any\r\n    villageCouncil: any\r\n    vilCouncilObjNum: any\r\n    typeCityL: string\r\n    cityL: string\r\n    typeStreetL: string\r\n    streetL: string\r\n    house: string\r\n    korps: string\r\n    app: string\r\n    ateObjectNum: any\r\n    ateElementUid: any\r\n    ateAddrNum: any\r\n}","import {addressLast, User} from '../api/api';\r\nimport moment from 'moment'\r\n\r\nexport const formUsers = (data: any) => {\r\n    return data.map((u: any) => formUser(u))\r\n}\r\n\r\nconst formUser = (user: User): UserForm => {\r\n    return {\r\n        name: user.name,\r\n        surname: user.surname,\r\n        sname: user.sname,\r\n        identif: user.identif,\r\n        addressLast: formAddressLast(user.addressLast),\r\n        ateAddress: user.ateAddress,\r\n        bdate: formDate(user.bdate),\r\n        dsdDateRec: user.dsdDateRec\r\n    }\r\n}\r\n\r\nexport const formDate = (date: string) => {\r\n    return moment(date).format('yyyy-MM-DD')\r\n}\r\n\r\nconst formAddressLast = (data: addressLast) => {\r\n    return compareValue(data.areaL) +\r\n        compareValue(data.areaObjNum) +\r\n        compareValue(data.regionL) +\r\n        compareValue(data.villageCouncil) +\r\n        compareValue(data.vilCouncilObjNum) +\r\n        compareValue(data.typeCityL) +\r\n        compareValue(data.cityL) +\r\n        compareValue(data.typeStreetL) +\r\n        compareValue(data.streetL)  +\r\n        compareValue(data.house) +\r\n        compareValue(data.korps) +\r\n        compareValue(data.app)\r\n}\r\n\r\nconst compareValue = (value: string) => value ?  value + ' ' : ''\r\n\r\nexport type UserForm = {\r\n    surname: string\r\n    name: string\r\n    sname: string\r\n    bdate: string\r\n    identif: string\r\n    addressLast: string\r\n    ateAddress: string\r\n    dsdDateRec: any\r\n}\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nconst slice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        status: 'idle',\r\n        error: null,\r\n        message: null\r\n    } as InitialStateType,\r\n    reducers: {\r\n        setAppError(state, action: PayloadAction<{ error: string | null }>) {\r\n            state.error = action.payload.error\r\n        },\r\n        setAppStatus(state, action: PayloadAction<{ status: RequestStatusType }>) {\r\n            state.status = action.payload.status\r\n        },\r\n        setAppMessage(state, action: PayloadAction<{ message: string | null }>) {\r\n            state.message = action.payload.message\r\n        }\r\n    }\r\n})\r\n\r\nexport const appReducer = slice.reducer\r\nexport const {setAppError, setAppStatus, setAppMessage} = slice.actions\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport type InitialStateType = {\r\n    status: RequestStatusType\r\n    error: string | null,\r\n    message: string | null\r\n}\r\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {ApiUsers, getUserParam} from '../api/api';\r\nimport {formUsers, UserForm} from '../utils/formUser';\r\nimport {setAppError, setAppStatus} from './app-reducer';\r\n\r\nexport const getSelectedUser = createAsyncThunk(\r\n    'users/getSelectedUser',\r\n    async (param: getUserParam, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus({status: 'loading'}))\r\n            const response = await ApiUsers.getUsers(param.identif, param.surname,\r\n                param.name, param.patronymic, param.doc_series, param.doc_num)\r\n            thunkAPI.dispatch(setAppStatus({status: 'succeeded'}))\r\n            const users = formUsers(response.data)\r\n            return {users}\r\n        } catch (e) {\r\n            thunkAPI.dispatch(setAppError({error: String(e)}))\r\n            return thunkAPI.rejectWithValue(null)\r\n        }\r\n    });\r\n\r\nconst slice = createSlice({\r\n    name: 'users',\r\n    initialState: [] as Array<UserForm>,\r\n    reducers: {},\r\n    extraReducers: builder => {\r\n        builder.addCase(getSelectedUser.fulfilled, (state, action) => {\r\n            return action.payload.users\r\n        })\r\n    }\r\n})\r\n\r\nexport const userReducer = slice.reducer\r\n","import React from 'react';\r\nimport './Sidebar.css'\r\nimport {SideBarHeader} from './SidebarHeader';\r\nimport {SidebarInputData} from './SidebarInput';\r\nimport {ButtonComponent} from '../../components/button/Button';\r\nimport {useFormik} from 'formik';\r\nimport {getUserParam} from '../../api/api';\r\nimport {useDispatch} from 'react-redux';\r\nimport {getSelectedUser} from '../../bll/users-reducer';\r\nimport { setAppMessage } from '../../bll/app-reducer';\r\n\r\nconst message = \"Заполните поле '№ паспорта' или 'Фамилия' или 'Идентификационный номер'\"\r\n\r\nexport const SidebarComponent = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {} as getUserParam,\r\n        onSubmit: (values: getUserParam) => {\r\n            if (values.surname || values.identif || values.doc_num) {\r\n                dispatch(getSelectedUser(values))\r\n            } else {\r\n               dispatch(setAppMessage({message: message}))\r\n            }\r\n        }\r\n    })\r\n\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <div className={'container-sidebar'}>\r\n            <div className={'p-sidebar p-component p-sidebar-left p-sidebar-active'}>\r\n                <SideBarHeader/>\r\n                <div className='input-container'>\r\n                    <SidebarInputData id={'surname'} name = {'surname'} onChange={formik.handleChange}\r\n                                      value={formik.values.surname} title={'Фамилия'}\r\n                                      placeholder={'ВВЕДИТЕ ФАМИЛИЮ'} width={'155px'}/>\r\n                    <SidebarInputData id={'name'} name={'name'} onChange={formik.handleChange}\r\n                                      value={formik.values.name}\r\n                                      title={'Имя'} placeholder={'ВВЕДИТЕ ИМЯ'} width={'155px'}/>\r\n                    <SidebarInputData id={'patronymic'} name={'patronymic'} onChange={formik.handleChange}\r\n                                      value={formik.values.patronymic}\r\n                                      title={'Отчество'} placeholder={'ВВЕДИТЕ ОТЧЕСТВО'} width={'155px'}/>\r\n                    <SidebarInputData id={'identif'} name={'identif'} onChange={formik.handleChange}\r\n                                      value={formik.values.identif}\r\n                                      title={'Идентификационный номер'} placeholder={'ВВЕДИТЕ НОМЕР'} width={'155px'}/>\r\n                    <div className='input-item input-passport'>\r\n                        <SidebarInputData id={'doc_series'} name={'doc_series'} onChange={formik.handleChange}\r\n                                          value={formik.values.doc_series}\r\n                                          title={'Серия'} placeholder={''} width={'44px'}/>\r\n                        <SidebarInputData id={'doc_num'} name={'doc_num'} onChange={formik.handleChange}\r\n                                          value={formik.values.doc_num}\r\n                                          title={'№ паспорта'} placeholder={''} width={'103px'}/>\r\n                    </div>\r\n                    <ButtonComponent type = {'submit'}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n","import React from 'react';\r\nimport {Paginator} from 'primereact/paginator';\r\nimport './PaginatorDemo.css';\r\n\r\nexport const PaginatorDemo = React.memo((props: any) => {\r\n\r\n    const onContentPageChange = (event: any) => {\r\n        props.onChangeCurrentPage(event.first)\r\n    }\r\n    return (\r\n        <div>\r\n            <Paginator first={props.currentPage} rows={1} totalRecords={props.totalPages}\r\n                       onPageChange={onContentPageChange}\r\n                       className={'.p-paginator .p-paginator-first, .p-paginator .p-paginator-prev, ' +\r\n                       '.p-paginator .p-paginator-next, .p-paginator .p-paginator-last'}\r\n                       template='FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink'>\r\n            </Paginator>\r\n        </div>\r\n    );\r\n})\r\n","import React from 'react';\r\nimport './Table.css'\r\nimport {UserForm} from '../../utils/formUser';\r\n\r\ntype PropsType = {\r\n    height?: string\r\n    border?: string\r\n    textAlign?: string\r\n    backgroundColor?: string\r\n    margin?: string\r\n    user?: UserForm\r\n}\r\n\r\nexport const FormTable = (props: PropsType) => {\r\n\r\n    return <tr role={'row'} style={{\r\n        height: `${props.height}`, backgroundColor: `${props.backgroundColor}`,\r\n        border: `${props.border}`\r\n    }}>\r\n        <td role={'cell'} className={'table-cell'}\r\n            style={{height: `${props.height}`, border: `${props.border}`}}>\r\n            <span style={\r\n                // @ts-ignore\r\n                {textAlign: `${props.textAlign}`, margin: `${props.margin}`}}>\r\n                {props.user?.surname ? props.user?.surname : 'Записи отсуствуют'}\r\n            </span>\r\n        </td>\r\n        <td role={'cell'} className={'table-cell'}\r\n            style={{border: `${props.border}`, height: `${props.height}`}}>\r\n            <span>{props.user?.name ? props.user?.name : ''}</span>\r\n        </td>\r\n        <td role={'cell'} className={'table-cell'}\r\n            style={{border: `${props.border}`, height: `${props.height}`}}>\r\n            <span>{props.user?.sname ? props.user?.sname : ''}</span>\r\n        </td>\r\n        <td role={'cell'} className={'table-cell'}\r\n            style={{border: `${props.border}`, height: `${props.height}`}}>\r\n            <span>{props.user?.bdate ? props.user?.bdate : ''}</span>\r\n        </td>\r\n        <td role={'cell'} className={'table-cell'}\r\n            style={{border: `${props.border}`, height: `${props.height}`}}>\r\n            <span>{props.user?.identif ? props.user?.identif : ''}</span>\r\n        </td>\r\n        <td role={'cell'} className={'table-cell'}\r\n            style={{border: `${props.border}`, height: `${props.height}`}}>\r\n            <span>{props.user?.addressLast ? props.user?.addressLast : ''}</span>\r\n        </td>\r\n        <td role={'cell'} className={'table-cell'}\r\n            style={{border: `${props.border}`, height: `${props.height}`}}>\r\n            <span>{props.user?.ateAddress ? props.user?.ateAddress : ''}</span>\r\n        </td>\r\n        <td role={'cell'} className={'table-cell'}\r\n            style={{border: `${props.border}`, height: `${props.height}`}}>\r\n            <span>{props.user?.dsdDateRec ? props.user?.dsdDateRec : ''}</span>\r\n        </td>\r\n    </tr>\r\n}","import React from 'react';\r\nimport {UserForm} from '../../utils/formUser';\r\nimport './Table.css'\r\nimport {FormTable} from './FormTable';\r\n\r\nexport const TableComponent = React.memo((props: any) => {\r\n\r\n    const title = ['Фамилия',\r\n                   'Имя',\r\n                   'Отчество',\r\n                   'Дата рождения',\r\n                   'Идентификационный номер',\r\n                   'Адрес регистрации (после конвертации)',\r\n                   'Адрес регистрации (коды ATE и TE)',\r\n                   'Дата регистрации']\r\n\r\n    const ArrayDate = props.data.length > 0\r\n               ? props.data.map((user: UserForm) => (\r\n                 <FormTable key={user.identif + Math.floor(Math.random() * Math.floor(1000))} user = {user}/>))\r\n               : <FormTable backgroundColor={'#0000'} height={'auto'} margin={'5px'} textAlign={'left'} border={'none'}/>\r\n\r\n    const headerTable = title.map((t) => {\r\n        return <th key={t}  className='table-cell header' style={{backgroundColor: '#d9e8fc', height: '35px'}}>\r\n            <span>{t}</span>\r\n        </th>\r\n    })\r\n\r\n    return <div className={'p-datatable-wrapper'}>\r\n        <table role={'grid'} className={'table'}>\r\n            <thead className={'p-datatable-thead'}>\r\n            <tr role={'row'}>\r\n                {headerTable}\r\n            </tr>\r\n            </thead>\r\n            <tbody className={'p-datatable-tbody'}>\r\n            {ArrayDate}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n})","import React from 'react';\r\n\r\nexport const Selected = (props: any) => {\r\n    return <div className={'select'}>\r\n        <select onChange={props.onSelectHandler} value={props.value}>\r\n            <option>15</option>\r\n            <option>20</option>\r\n            <option>25</option>\r\n        </select>\r\n    </div>\r\n}","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {PaginatorDemo} from '../../components/paginator/PaginatorComponent';\r\nimport {TableComponent} from './TableComponent';\r\nimport './TableContainer.css'\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {UserForm} from '../../utils/formUser';\r\nimport {Selected} from './Selected';\r\n\r\nexport const TableContainer = React.memo(() => {\r\n    const data: Array<UserForm> | any = useSelector<AppRootStateType>(state => state.users)\r\n\r\n    useEffect(() => {\r\n        setTotalCount(data.length)\r\n    }, [data])\r\n\r\n    const [pageSize, setPageSize] = useState(15)\r\n    const [totalCount, setTotalCount] = useState(data.length)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n\r\n    let indexOfLastPost = (currentPage + 1) * pageSize\r\n    let indexOfFirstPost = indexOfLastPost - pageSize\r\n    let currentData = data.slice(indexOfFirstPost, indexOfLastPost)\r\n\r\n    const totalPages = Math.ceil(totalCount / pageSize)\r\n\r\n    const onChangeCurrentPage = useCallback((currentPage: number) => {\r\n        setCurrentPage(currentPage)\r\n    }, [])\r\n\r\n    const onSelectHandler = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\r\n        setPageSize(Number(e.currentTarget.value))\r\n    }, [])\r\n\r\n    return <div className={'container'}>\r\n        <div className={'box-upper'}>\r\n            <span>Результат поиска</span>\r\n        </div>\r\n        <TableComponent data={currentData}/>\r\n        <div className={'box-lower'}>\r\n            <Selected onSelectHandler={onSelectHandler} value={pageSize}/>\r\n            <PaginatorDemo totalPages={totalPages}\r\n                           currentPage={currentPage}\r\n                           onChangeCurrentPage={onChangeCurrentPage}/>\r\n        </div>\r\n    </div>\r\n})","import React from 'react';\r\nimport {TableContainer} from './TableContainer';\r\nimport './ResultComponent.css'\r\n\r\nexport const ResultSearchComponent = () => {\r\n    return <div className={'container-result'}>\r\n        <div className={'header-result'}>\r\n            <div className={'result-icon'}>\r\n                <div className={'result-item'}>\r\n                    <i className=\"pi pi-search\" style={{'fontSize': '10px'}}/>\r\n                </div>\r\n                <div className={'result-item'}>\r\n                    Поиск\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style={{backgroundColor: 'white', padding: '10px'}}>\r\n            <TableContainer/>\r\n        </div>\r\n    </div>\r\n}","import {ProgressSpinner} from 'primereact/progressspinner';\r\n\r\nexport const Progress = () => {\r\n    return <div style={{minHeight: '80vh', display: 'flex',\r\n                            justifyContent: 'center', alignItems: 'center'}}>\r\n            <ProgressSpinner strokeWidth=\"8\" fill=\"#EEEEEE\"\r\n                             animationDuration=\".5s\"/>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport {TopBar} from '../../components/topbar/Topbar';\r\nimport './Main.css'\r\nimport {SidebarComponent} from '../../features/sidebar/Sidebar';\r\nimport {ResultSearchComponent} from '../../features/table/ResultSearchComponent';\r\nimport {Progress} from '../../common/loading/Loading';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\n\r\nexport const Main = () => {\r\n\r\n    let status = useSelector<AppRootStateType>(state => state.app.status)\r\n    if (status === 'loading') {\r\n        return <Progress/>\r\n    }\r\n\r\n    return <div className={'main-container'}>\r\n        <div className={'main-content'}>\r\n            <TopBar/>\r\n            <SidebarComponent/>\r\n            <ResultSearchComponent/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React, {useRef} from 'react';\r\nimport {Toast} from 'primereact/toast';\r\nimport './ToastDemo.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {setAppError, setAppMessage} from '../../bll/app-reducer';\r\n\r\nexport const Messages = () => {\r\n\r\n    const toast = useRef(null);\r\n\r\n    let error = useSelector<AppRootStateType>(state => state.app.error)\r\n    let message = useSelector<AppRootStateType>(state => state.app.message)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const showInfo = () => {\r\n        // @ts-ignore\r\n        if (toast.current !== null) {\r\n            // @ts-ignore\r\n            toast.current.show({severity: 'info', summary: `message`, detail: `${message}`, life: 3000});\r\n        }\r\n        dispatch(setAppMessage({message: null}));\r\n    }\r\n\r\n    const showError = () => {\r\n        // @ts-ignore\r\n        if (toast.current !== null) {\r\n            // @ts-ignore\r\n            toast.current.show({severity: 'error', summary: `error`, detail: `${error}`, life: 3000});\r\n        }\r\n        dispatch(setAppError({error: null}));\r\n    }\r\n\r\n    if (error) {\r\n        showError()\r\n    }\r\n\r\n    if (message) {\r\n        showInfo()\r\n    }\r\n\r\n    return <div>\r\n        <Toast ref={toast} position='bottom-center'/>\r\n    </div>\r\n}","import React from 'react';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport {Main} from './main/Main';\nimport {Messages} from '../common/message/Messages';\n\nconst App = () => {\n    return <>\n        <Main/>\n        <Messages/>\n    </>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, configureStore} from '@reduxjs/toolkit';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer';\r\nimport { userReducer } from './users-reducer';\r\n\r\nconst rootReducer = combineReducers(\r\n    {\r\n        app: appReducer,\r\n        users: userReducer\r\n    }\r\n)\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})\r\n\r\nexport type RootReducerType = typeof rootReducer\r\nexport type AppRootStateType = ReturnType<RootReducerType>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store = {store}>\n       <App/>\n   </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}